using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MyMathFunctions;

namespace _044_Pentagon_numbers
{
    class Program
    {
        static void Main(string[] args)
        {
            //Pentagonal numbers are generated by the formula, P(n)=n*(3n−1)/2. The first ten pentagonal numbers are:

            //1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

            //It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

            //Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
            //and D = |Pk − Pj| is minimised; what is the value of D?

            for (int i = 1; i <= 10; i++)
            {
                Console.WriteLine(MathFunctions.PentagonalNumber(i));
            }

            const int limit = 26755;        //biggest Pentagonal number that fits in an int
            int Pj = 0;
            int Pk = 0;
            int minD = int.MaxValue;

            for (int j = 1; j < limit; j++)
            {
                int p1 = MathFunctions.PentagonalNumber(j);
                for (int k = j+1; k < limit; k++)
                {
                    int p2 = MathFunctions.PentagonalNumber(k);
                    if (HasPentSumAndDiff(p1, p2))
                    {
                        int D = p2 - p1;
                        if (D < minD)
                        {
                            minD = D;
                            Pj = p1;
                            Pk = p2;
                            Console.WriteLine("P{0} = {1}, P{2} = {3}, D = {4}", j, Pj, k, Pk, minD);
                        }
                    }
                }
                if (j % 100 == 0)
                {
                    Console.WriteLine("iteration {0}", j);
                }
            }
            Console.WriteLine("Final Results: Pk = {0}, Pj = {1}, D = {2}", Pk, Pj, minD);


            Console.Read();
        }

        public static bool HasPentSumAndDiff(int j, int k)
        {
            int sum = j + k;
            if (!MathFunctions.IsPentagonal(sum))
	        {
                return false;
	        }
            int diff = k - j;
            if (!MathFunctions.IsPentagonal(diff))
            {
                return false;
            }
            return true;
        }
    }
}
